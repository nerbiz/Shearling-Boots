// Get a value from a map, or a sub-property, if the value is a map
// @param  $map      The map variable
// @param  $key      The map key, or '_all', to get the map, if the value is a map
// @param  $sub-key  The map key within a value (map)
// @return The value of the map key
@function sb-map-get($map, $key, $sub-key: null) {
  // Return the map, if needed
  @if $key == '_all' {
    @return $map;
  }

  // Throw an error, if the key doesn't exist
  @if not map-has-key($map, $key) {
    @error "The key '#{$key}' doesn't exist in the map";
    @return null;
  }

  // Get the value belonging to the key
  $value: map-get($map, $key);

  // See if the value is a map
  @if type-of($value) == 'map' {
    // Return the sub-value
    @return sb-map-get($value, $sub-key);
  }

  // Otherwise return the color
  @else {
    @return $value;
  }
}



@function sb-setting($category, $setting) {
  @return sb-map-get($__settings, $category, $setting);
}

@function sb-breakpoint($breakpoint) {
  @return sb-map-get($__grid-breakpoints, $breakpoint);
}

@function sb-container-width($breakpoint) {
  @return sb-map-get($__container-max-widths, $breakpoint);
}

@function sb-font-family($name) {
  @return sb-map-get($__font-families, $name);
}

@function sb-font-size($size) {
  @return sb-map-get($__font-sizes, $size);
}

@function sb-font-weight($weight) {
  @return sb-map-get($__font-weights, $weight);
}

@function sb-line-height($height) {
  @return sb-map-get($__line-heights, $height);
}

@function sb-border-radius($size) {
  @return sb-map-get($__border-radius, $size);
}

@function sb-border-width($width) {
  @return sb-map-get($__border-widths, $width);
}

@function sb-color($name, $variant: 'base') {
  @return sb-map-get($__colors, $name, $variant);
}
